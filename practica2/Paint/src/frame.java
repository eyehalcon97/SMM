





import smm.moh.iu.Formas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.awt.image.WritableRaster;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;
import java.awt.image.LookupTable;




/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author eyehalcon97
 */
public class frame extends javax.swing.JFrame {

    /**
     * Creates new form frame
     */
    
    private boolean barraestado=true;
    private boolean barraformas=true;
    private boolean barraatributos=true;
    Color color = new Color(0,0,0);
    Formas forma;
    BufferedImage imgSource;
    Color colors[] = { Color.RED, Color.BLUE, Color.BLACK, Color.WHITE };
    public frame() {
        initComponents();
        this.setSize(800, 600);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jDialog1 = new javax.swing.JDialog();
        menu = new javax.swing.ButtonGroup();
        jPanel7 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        pie = new javax.swing.JPanel();
        estado = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Filtro = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        contrasteoscuro = new javax.swing.JButton();
        contrastenormal = new javax.swing.JButton();
        aclarar = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jSlider2 = new javax.swing.JSlider();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        head = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        nav1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        nav2 = new javax.swing.JPanel();
        lapiz = new javax.swing.JToggleButton();
        linea = new javax.swing.JToggleButton();
        rectangulo = new javax.swing.JToggleButton();
        elipse = new javax.swing.JToggleButton();
        editar = new javax.swing.JToggleButton();
        nav3 = new javax.swing.JPanel();
        colores = new javax.swing.JComboBox<>();
        nav4 = new javax.swing.JPanel();
        numeroalisar = new javax.swing.JSpinner();
        relleno = new javax.swing.JToggleButton();
        transparencia = new javax.swing.JToggleButton();
        Alisar = new javax.swing.JToggleButton();
        Escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        FileNuevo = new javax.swing.JMenuItem();
        FileAbrir = new javax.swing.JMenuItem();
        FileGuardar = new javax.swing.JMenuItem();
        Edicion = new javax.swing.JMenu();
        EdicionVerbarra = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pie.setLayout(new java.awt.BorderLayout());

        estado.setText("Paint");
        pie.add(estado, java.awt.BorderLayout.PAGE_END);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setMaximumSize(new java.awt.Dimension(10, 10));
        jSeparator3.setPreferredSize(new java.awt.Dimension(10, 10));
        jSeparator3.setRequestFocusEnabled(false);
        jPanel1.add(jSeparator3);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanel4.setLayout(new java.awt.GridLayout(0, 1));

        jLabel1.setText("Brillo");
        jPanel4.add(jLabel1);

        jSlider1.setMinimum(-100);
        jSlider1.setValue(0);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jSlider1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSlider1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSlider1FocusLost(evt);
            }
        });
        jPanel4.add(jSlider1);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(0, 1));

        jLabel2.setText("Filtro");
        jPanel5.add(jLabel2);

        Filtro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "media", "binomial", "enfoque", "relieve", "laplaciano" }));
        Filtro.setSelectedItem("Seleccione");
        Filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroActionPerformed(evt);
            }
        });
        jPanel5.add(Filtro);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.GridLayout(0, 1));

        jLabel3.setText("Contraste");
        jPanel6.add(jLabel3);

        jPanel9.setLayout(new java.awt.GridLayout(0, 3));

        contrasteoscuro.setText("normal");
        contrasteoscuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrasteoscuroActionPerformed(evt);
            }
        });
        jPanel9.add(contrasteoscuro);

        contrastenormal.setText("contrastelog");
        contrastenormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrastenormalActionPerformed(evt);
            }
        });
        jPanel9.add(contrastenormal);

        aclarar.setText("aclarar");
        aclarar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aclararActionPerformed(evt);
            }
        });
        jPanel9.add(aclarar);

        jPanel6.add(jPanel9);

        jPanel2.add(jPanel6);

        jPanel10.setLayout(new java.awt.GridLayout(0, 1));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 97, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel10.add(jPanel11);

        jButton10.setText("Funcion Seno");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton10);

        jPanel2.add(jPanel10);

        jPanel3.setLayout(new java.awt.GridLayout(0, 1));

        jLabel4.setText("Rotacion");
        jPanel3.add(jLabel4);

        jPanel12.setLayout(new java.awt.GridLayout(1, 0));

        jSlider2.setMaximum(360);
        jSlider2.setMinorTickSpacing(90);
        jSlider2.setPaintTicks(true);
        jSlider2.setSnapToTicks(true);
        jSlider2.setToolTipText("");
        jSlider2.setValue(0);
        jSlider2.setAutoscrolls(true);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });
        jSlider2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSlider2PropertyChange(evt);
            }
        });
        jPanel12.add(jSlider2);

        jButton5.setText("90");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton5);

        jButton6.setText("180");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton6);

        jButton7.setText("270");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton7);

        jPanel3.add(jPanel12);

        jPanel2.add(jPanel3);

        jPanel13.setLayout(new java.awt.GridLayout(0, 1));

        jLabel5.setText("Escala");
        jPanel13.add(jLabel5);

        jPanel14.setLayout(new java.awt.GridLayout(1, 0));

        jButton8.setText("jButton8");
        jPanel14.add(jButton8);

        jButton9.setText("jButton9");
        jPanel14.add(jButton9);

        jPanel13.add(jPanel14);

        jPanel2.add(jPanel13);

        jPanel1.add(jPanel2);

        pie.add(jPanel1, java.awt.BorderLayout.PAGE_START);
        pie.add(jSeparator2, java.awt.BorderLayout.CENTER);

        getContentPane().add(pie, java.awt.BorderLayout.PAGE_END);

        head.setLayout(new java.awt.GridLayout(1, 0));

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        nav1.setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NuevoBoceto.GIF"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        nav1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/abrir.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileAbrirActionPerformed(evt);
            }
        });
        nav1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Guardar.gif"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileGuardarActionPerformed(evt);
            }
        });
        nav1.add(jButton3);

        jPanel8.add(nav1);

        nav2.setLayout(new java.awt.GridLayout(1, 0));

        lapiz.setName("Lapiz");
        menu.add(lapiz);
        lapiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Lapiz.gif"))); // NOI18N
        lapiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(lapiz);

        linea.setName("Linea");
        menu.add(linea);
        linea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Linea.gif"))); // NOI18N
        linea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(linea);

        rectangulo.setName("Rectangulo");
        menu.add(rectangulo);
        rectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Rectangulo.gif"))); // NOI18N
        rectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(rectangulo);

        elipse.setName("Elipse");
        menu.add(elipse);
        elipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Ovalo.gif"))); // NOI18N
        elipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(elipse);

        editar.setName("Editar");
        menu.add(editar);
        editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/seleccion.png"))); // NOI18N
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(editar);

        jPanel8.add(nav2);

        nav3.setLayout(new java.awt.GridLayout(1, 0));

        colores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Negro", "Verde", "Amarillo", "Rojo", "Azul", "Blanco" }));
        colores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coloresActionPerformed(evt);
            }
        });
        nav3.add(colores);

        jPanel8.add(nav3);

        nav4.setLayout(new java.awt.GridLayout(1, 0));

        numeroalisar.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        numeroalisar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numeroalisarStateChanged(evt);
            }
        });
        nav4.add(numeroalisar);

        relleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rellenar.png"))); // NOI18N
        relleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rellenoActionPerformed(evt);
            }
        });
        nav4.add(relleno);

        transparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/transparencia.png"))); // NOI18N
        transparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transparenciaActionPerformed(evt);
            }
        });
        nav4.add(transparencia);

        Alisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/alisar.png"))); // NOI18N
        Alisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlisarActionPerformed(evt);
            }
        });
        nav4.add(Alisar);

        jPanel8.add(nav4);

        head.add(jPanel8);

        getContentPane().add(head, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout EscritorioLayout = new javax.swing.GroupLayout(Escritorio);
        Escritorio.setLayout(EscritorioLayout);
        EscritorioLayout.setHorizontalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1227, Short.MAX_VALUE)
        );
        EscritorioLayout.setVerticalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );

        getContentPane().add(Escritorio, java.awt.BorderLayout.CENTER);

        File.setText("Archivo");
        File.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FileMouseEntered(evt);
            }
        });
        File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileActionPerformed(evt);
            }
        });

        FileNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NuevoBoceto.GIF"))); // NOI18N
        FileNuevo.setText("Nuevo");
        menu.add(FileNuevo);
        FileNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileNuevoActionPerformed(evt);
            }
        });
        File.add(FileNuevo);

        FileAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/abrir.png"))); // NOI18N
        FileAbrir.setText("Abrir");
        FileAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileAbrirActionPerformed(evt);
            }
        });
        File.add(FileAbrir);

        FileGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Guardar.gif"))); // NOI18N
        FileGuardar.setText("Guardar");
        FileGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileGuardarActionPerformed(evt);
            }
        });
        File.add(FileGuardar);

        jMenuBar1.add(File);

        Edicion.setText("Edición");

        EdicionVerbarra.setSelected(true);
        EdicionVerbarra.setText("Ver barra de estado");
        EdicionVerbarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EdicionVerbarraActionPerformed(evt);
            }
        });
        Edicion.add(EdicionVerbarra);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Ver barra de formas");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        Edicion.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Ver barra de atributos");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        Edicion.add(jCheckBoxMenuItem2);

        jMenuBar1.add(Edicion);

        jMenu1.setText("Imagen");

        jCheckBoxMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("Tamaño nueva Imagen");
        jCheckBoxMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_FileMouseEntered

    private void FileGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileGuardarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
        if (vi != null) {     
            JFileChooser dlg = new JFileChooser();
            
        int resp = dlg.showSaveDialog(this);     
        if (resp == JFileChooser.APPROVE_OPTION) {     
            try {       
                BufferedImage img = vi.getLienzoImagen().getImagen();      
                if (img != null) {        
                    File f = dlg.getSelectedFile();       
                    ImageIO.write(img, "png", f);         
                    vi.setTitle(f.getName());       
                    }    
                }catch (Exception ex) {       
                    System.err.println("Error al guardar la imagen");     
                }
        }
        }
    }//GEN-LAST:event_FileGuardarActionPerformed

    private void FileAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileAbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {     
            try{       
                File f = dlg.getSelectedFile();         
                BufferedImage img = ImageIO.read(f);       
                VentanaInterna vi = new VentanaInterna();        
                vi.getLienzoImagen().setImage(img);        
                this.Escritorio.add(vi);        
                vi.setTitle(f.getName());        
                vi.setVisible(true);     
            }catch(Exception ex){       
                System.err.println("Error al leer la imagen");     }   }
    }//GEN-LAST:event_FileAbrirActionPerformed

    private void FileNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileNuevoActionPerformed
        // TODO add your handling code here:
         estado.setText("Paint");
        forma = null;
        color = new Color(0,0,0);

        menu.clearSelection();
        
    }//GEN-LAST:event_FileNuevoActionPerformed

    private void EdicionVerbarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EdicionVerbarraActionPerformed
        // TODO add your handling code here:
        barraestado = !barraestado;
        estado.setVisible(barraestado);
        
    }//GEN-LAST:event_EdicionVerbarraActionPerformed

    private void herramienta(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_herramienta
        // TODO add your handling code here:
        javax.swing.JToggleButton boton;
        boton = (javax.swing.JToggleButton) evt.getSource();
        
        if(boton.getName() == "Lapiz"){
            forma=Formas.PUNTO;
        }else{
            if(boton.getName() == "Linea"){
                forma = Formas.LINEA;
            }else{
                if(boton.getName() == "Rectangulo"){
                    forma = Formas.RECTANGULO;
                }else{
                    if(boton.getName() == "Elipse"){
                        forma = Formas.ELIPSE;
                    }else{
                        if(boton.getName() == "Editar"){
                            forma = Formas.EDITAR;
                        }
                    }
                }
            }
        }
        estado.setText(forma.toString());
        VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzoImagen().setFormas(forma);
        }
    
    }//GEN-LAST:event_herramienta

    private void FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_FileActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        // TODO add your handling code here:
        barraformas = !barraformas;
        nav2.setVisible(barraformas);
        
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jCheckBoxMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItem3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         VentanaInterna vi = new VentanaInterna();
         Escritorio.add(vi);
         vi.setVisible(true);
         BufferedImage img;
         img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
         img.createGraphics().setPaint(Color.white);
         img.createGraphics().fill(new Rectangle2D.Float(0.0f, 0.0f, img.getWidth(), img.getHeight()));
         vi.getLienzoImagen().setImage(img);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rellenoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
        vi.getLienzoImagen().setRelleno();
        }
        
        
    }//GEN-LAST:event_rellenoActionPerformed

    private void coloresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coloresActionPerformed
        // TODO add your handling code here:
        
        String seleccionado = colores.getSelectedItem().toString();
        Color color = Colores.valueOf(seleccionado).getColor();
        VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
        vi.getLienzoImagen().setColor(color);
        }
        
        
    }//GEN-LAST:event_coloresActionPerformed

    private void AlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlisarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
        vi.getLienzoImagen().setAlisar();
        }
    }//GEN-LAST:event_AlisarActionPerformed

    private void numeroalisarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numeroalisarStateChanged
        // TODO add your handling code here:
       VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
        vi.getLienzoImagen().setNumrelleno(Integer.parseInt(numeroalisar.getValue().toString()));
        }
    }//GEN-LAST:event_numeroalisarStateChanged

    private void transparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transparenciaActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
       vi.getLienzoImagen().setTransparencia();
        }
    }//GEN-LAST:event_transparenciaActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        // TODO add your handling code here:
        barraatributos = !barraatributos;
        nav3.setVisible(barraatributos);
        nav4.setVisible(barraatributos);
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void FiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroActionPerformed
        // TODO add your handling code here:
        
        VentanaInterna vi = (VentanaInterna) this.Escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzoImagen().getImagen();
            if (this.imgSource != null)
                try
                {
                    Kernel k = null; // por inicializarlo con algo
                    System.out.println(Filtro.getSelectedItem().toString());
                    switch (Filtro.getSelectedItem().toString())
                    {
                        case "Seleccione": // --seleccione--
                            break;
                        case "media": // Emborronamiento media
                            k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                            break;
                        case "binomial": // Emborronamiento binomial
                            k = KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
                            break;
                        case "enfoque": // Emborronamiento Enfoque
                            k = KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
                            break;
                        case "relieve": // Relieve
                            k = KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
                            break;
                        case "laplaciano": // Detector de fronteras laplaciano
                            k = KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
                            break;
                    }
                    if (k != null)
                    {
                        ConvolveOp cop = new ConvolveOp(k,ConvolveOp.EDGE_NO_OP, null);
                        BufferedImage imgSource = cop.filter(this.imgSource, null);
                        vi.getLienzoImagen().setImagen(imgSource);
                        vi.getLienzoImagen().repaint();
                    }

                } catch (Exception e)
                {
                    System.err.println("Error");
                }
        }


       
        
    }//GEN-LAST:event_FiltroActionPerformed

    private void jSlider1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider1FocusGained
        // TODO add your handling code here:
          VentanaInterna vi =(VentanaInterna)(Escritorio.getSelectedFrame());
          if(vi != null){
              imgSource = vi.getLienzoImagen().getImagen();
          }
    }//GEN-LAST:event_jSlider1FocusGained

    private void jSlider1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider1FocusLost
        // TODO add your handling code here:
        imgSource =null;
        
    }//GEN-LAST:event_jSlider1FocusLost

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(Escritorio.getSelectedFrame());
        float value = this.jSlider1.getValue();
        if (vi != null && imgSource != null)
            try
            {
                RescaleOp rop;
                if (this.imgSource.getColorModel().hasAlpha())
                {
                    float[] scales = new float[]{1.0f, 1.0f, 1.0f, 1.0f};
                    float[] offsets = new float[]{value, value, value, 0.0f};
                    rop = new RescaleOp(scales, offsets, null);
                } else{
                    rop = new RescaleOp(1.0f, value, null);
                }
                BufferedImage imgdest = rop.filter(this.imgSource, null);
                vi.getLienzoImagen().setImage(imgdest);
                vi.getLienzoImagen().repaint();
                
            } catch (Exception e)
            {
                System.err.println("Error");
            }
    }//GEN-LAST:event_jSlider1StateChanged

    private void contrasteoscuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrasteoscuroActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (Escritorio.getSelectedFrame());   
        if (vi != null) {     
            BufferedImage imgSource = vi.getLienzoImagen().getImagen();
             if(imgSource!=null){             
            try{              
                int type = LookupTableProducer.TYPE_GAMMA_CORRECTION;
            
                 LookupTable lt = LookupTableProducer.createLookupTable(type);    
                 lt = LookupTableProducer.gammaCorrection(LookupTableProducer.DEFAULT_A_GAMMA, LookupTableProducer.TYPE_GAMMA_CORRECTION);
        LookupOp lop = new LookupOp(lt, null);                 
        lop.filter( imgSource , imgSource);         
        vi.repaint();       
        } catch(Exception e){           
        System.err.println(e.getLocalizedMessage());       
        }           
        }   
        }
    }//GEN-LAST:event_contrasteoscuroActionPerformed

    private void contrastenormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrastenormalActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (Escritorio.getSelectedFrame());   
        if (vi != null) {     
            BufferedImage imgSource = vi.getLienzoImagen().getImagen();
             if(imgSource!=null){             
            try{              
                int type = LookupTableProducer.TYPE_SFUNCION;
            
                 LookupTable lt = LookupTableProducer.createLookupTable(type);
                 lt = LookupTableProducer.gammaCorrection(LookupTableProducer.TYPE_GAMMA_CORRECTION, LookupTableProducer.DEFAULT_GAMMA);
        LookupOp lop = new LookupOp(lt, null);                 
        lop.filter( imgSource , imgSource);         
        vi.repaint();       
        } catch(Exception e){           
        System.err.println(e.getLocalizedMessage());       
        }           
        }   
        }
    }//GEN-LAST:event_contrastenormalActionPerformed

    private void aclararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aclararActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (Escritorio.getSelectedFrame());   
        if (vi != null) {     
            BufferedImage imgSource = vi.getLienzoImagen().getImagen();
             if(imgSource!=null){             
            try{              
                int type = LookupTableProducer.TYPE_LOGARITHM;
            
                 LookupTable lt = LookupTableProducer.logarithmFuction();
                 //lt = LookupTableProducer.gammaCorrection(LookupTableProducer.DEFAULT_GAMMA, LookupTableProducer.);
        LookupOp lop = new LookupOp(lt, null);                 
        lop.filter( imgSource , imgSource);         
        vi.repaint();       
        } catch(Exception e){           
        System.err.println(e.getLocalizedMessage());       
        }           
        }   
        }
    }//GEN-LAST:event_aclararActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        imgSource = vi.getLienzoImagen().getImagen();
        
        if (vi != null){
            try
            {
                LookupTable lt = seno(180);
                LookupOp lop = new LookupOp(lt, null);
                lop.filter(imgSource, imgSource);
                vi.repaint();
            } catch (Exception e)
            {
                System.err.println("Error");
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
        rotar(90);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
        rotar(180);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
        rotar(270);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jSlider2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSlider2PropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jSlider2PropertyChange

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
        rotar(jSlider2.getValue());
        }
    }//GEN-LAST:event_jSlider2StateChanged

    
    private void rotar(int angulo){
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        imgSource = vi.getLienzoImagen().getImagen();
        double r = Math.toRadians(angulo); 
        Point c = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2); 
        AffineTransform at = AffineTransform.getRotateInstance(r,c.x,c.y); 
        AffineTransformOp atop; atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR); 
        BufferedImage imgdest = atop.filter(imgSource, null);
        vi.getLienzoImagen().setImagen(imgdest);
    }
    private LookupTable seno(double w){
        double K = 255.0; // Cte de normalización
        // Código implementado f(x)=|sin(wx)|

        byte[] lt = new byte[256];
        for (int i = 0; i < 256; ++i)
            lt[i] = (byte)Math.abs(K * Math.sin( w * i ));
        
        ByteLookupTable slt = new ByteLookupTable(0, lt);
        return slt;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Alisar;
    private javax.swing.JMenu Edicion;
    private javax.swing.JCheckBoxMenuItem EdicionVerbarra;
    private javax.swing.JDesktopPane Escritorio;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem FileAbrir;
    private javax.swing.JMenuItem FileGuardar;
    private javax.swing.JMenuItem FileNuevo;
    private javax.swing.JComboBox<String> Filtro;
    private javax.swing.JButton aclarar;
    private javax.swing.JComboBox<String> colores;
    private javax.swing.JButton contrastenormal;
    private javax.swing.JButton contrasteoscuro;
    private javax.swing.JToggleButton editar;
    private javax.swing.JToggleButton elipse;
    private javax.swing.JLabel estado;
    private javax.swing.JPanel head;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JToggleButton lapiz;
    private javax.swing.JToggleButton linea;
    private javax.swing.ButtonGroup menu;
    private javax.swing.JPanel nav1;
    private javax.swing.JPanel nav2;
    private javax.swing.JPanel nav3;
    private javax.swing.JPanel nav4;
    private javax.swing.JSpinner numeroalisar;
    private javax.swing.JPanel pie;
    private javax.swing.JToggleButton rectangulo;
    private javax.swing.JToggleButton relleno;
    private javax.swing.JToggleButton transparencia;
    // End of variables declaration//GEN-END:variables
}
