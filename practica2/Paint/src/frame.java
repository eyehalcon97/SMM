


import smm.moh.iu.Formas;
import java.awt.Color;
import java.awt.Point;
import java.awt.Transparency;
import java.awt.color.ColorSpace;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ComponentColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.RescaleOp;
import java.awt.image.WritableRaster;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;
import java.awt.image.LookupTable;
import java.util.List;
import sm.sound.SMClipPlayer;
import sm.sound.SMPlayer;
import sm.sound.SMRecorder;
import sm.sound.SMSoundRecorder;
import smm.moh.graficos.MiElipse;
import smm.moh.graficos.MiFigura;
import smm.moh.graficos.MiRectangularShape;
import smm.moh.graficos.MiRectangulo;
import smm.moh.audio.ManejadorAudio;









/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author eyehalcon97
 */
public class frame extends javax.swing.JFrame {

    /**
     * Creates new form frame
     */
    int grados =0;
    private boolean barraestado=true;
    private boolean barraformas=true;
    private boolean barraatributos=true;
    private boolean formas=false;
    Formas form = null;
    Color color = new Color(0,0,0);
    Formas forma=null;
    BufferedImage imgSource=null;
    Color colors[] = { Color.RED, Color.BLUE,Color.BLACK,Color.WHITE };

    int cordenadaX = 0;
    int cordenadaY = 0;
    private SMPlayer player = null; 
    private SMRecorder recorder=null;
    private File rec=new File("Bufer");
    private List<MiFigura> lista;
    private MiLista list_model = new MiLista();

    public frame() {
        initComponents();
        this.setSize(800, 600);
        botonstop.setEnabled(false);
        li.setModel(list_model);
        jPanel17.setVisible(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jDialog1 = new javax.swing.JDialog();
        menu = new javax.swing.ButtonGroup();
        jPanel7 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        list = new javax.swing.JMenu();
        pie = new javax.swing.JPanel();
        estado = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Filtro = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        contrasteoscuro = new javax.swing.JButton();
        contrastenormal = new javax.swing.JButton();
        aclarar = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        EspectroColor = new javax.swing.JButton();
        espectro = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jSlider2 = new javax.swing.JSlider();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        reducir = new javax.swing.JButton();
        aumentar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        head = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        nav1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        nav2 = new javax.swing.JPanel();
        lapiz = new javax.swing.JToggleButton();
        linea = new javax.swing.JToggleButton();
        rectangulo = new javax.swing.JToggleButton();
        elipse = new javax.swing.JToggleButton();
        String = new javax.swing.JToggleButton();
        nav3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        degh = new javax.swing.JButton();
        Relleno = new javax.swing.JButton();
        Borde = new javax.swing.JButton();
        Degradado = new javax.swing.JButton();
        degv = new javax.swing.JButton();
        nav4 = new javax.swing.JPanel();
        numeroalisar = new javax.swing.JSpinner();
        relleno = new javax.swing.JToggleButton();
        Alisar = new javax.swing.JToggleButton();
        numtrans = new javax.swing.JSlider();
        jPanel18 = new javax.swing.JPanel();
        botonRecord = new javax.swing.JButton();
        botonplay = new javax.swing.JButton();
        botonstop = new javax.swing.JButton();
        listaReproduccion = new javax.swing.JComboBox<>();
        jPanel17 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        Subir = new javax.swing.JButton();
        Bajar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        X = new javax.swing.JSpinner();
        jPanel24 = new javax.swing.JPanel();
        mod = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        Y = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        li = new javax.swing.JList<>();
        Escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        FileNuevo = new javax.swing.JMenuItem();
        FileAbrir = new javax.swing.JMenuItem();
        FileGuardar = new javax.swing.JMenuItem();
        Edicion = new javax.swing.JMenu();
        EdicionVerbarra = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        Acercade = new javax.swing.JMenuItem();

        jButton4.setText("jButton4");

        list.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pie.setPreferredSize(new java.awt.Dimension(2409, 100));
        pie.setLayout(new java.awt.BorderLayout());

        estado.setText("Paint");
        pie.add(estado, java.awt.BorderLayout.PAGE_END);

        jPanel1.setMinimumSize(new java.awt.Dimension(869, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(2409, 80));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setMaximumSize(new java.awt.Dimension(10, 10));
        jSeparator3.setPreferredSize(new java.awt.Dimension(10, 10));
        jSeparator3.setRequestFocusEnabled(false);
        jPanel1.add(jSeparator3);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanel4.setLayout(new java.awt.GridLayout(0, 1));

        jLabel1.setText("Brillo");
        jPanel4.add(jLabel1);

        jSlider1.setMinimum(-100);
        jSlider1.setValue(0);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jSlider1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSlider1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSlider1FocusLost(evt);
            }
        });
        jPanel4.add(jSlider1);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(0, 1));

        jLabel2.setText("Filtro");
        jPanel5.add(jLabel2);

        Filtro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "media", "binomial", "enfoque", "relieve", "laplaciano", "43" }));
        Filtro.setSelectedItem("Seleccione");
        Filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroActionPerformed(evt);
            }
        });
        jPanel5.add(Filtro);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.GridLayout(0, 1));

        jLabel3.setText("Contraste");
        jPanel6.add(jLabel3);

        jPanel9.setLayout(new java.awt.GridLayout(0, 3));

        contrasteoscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/oscurecer.png"))); // NOI18N
        contrasteoscuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrasteoscuroActionPerformed(evt);
            }
        });
        jPanel9.add(contrasteoscuro);

        contrastenormal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/contraste.png"))); // NOI18N
        contrastenormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrastenormalActionPerformed(evt);
            }
        });
        jPanel9.add(contrastenormal);

        aclarar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iluminar.png"))); // NOI18N
        aclarar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aclararActionPerformed(evt);
            }
        });
        jPanel9.add(aclarar);

        jPanel6.add(jPanel9);

        jPanel2.add(jPanel6);

        jPanel10.setLayout(new java.awt.GridLayout(2, 1));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel10.add(jPanel11);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel10.add(jPanel21);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sinusoidal.png"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton10);

        jButton9.setText("MiFuncion (sqrt(log10(x))");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton9);

        jPanel2.add(jPanel10);

        jPanel15.setLayout(new java.awt.GridLayout(0, 1));

        jLabel6.setText("Color");
        jPanel15.add(jLabel6);

        jPanel16.setLayout(new java.awt.GridLayout(1, 0));

        EspectroColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bandas.png"))); // NOI18N
        EspectroColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EspectroColorActionPerformed(evt);
            }
        });
        jPanel16.add(EspectroColor);

        espectro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "RGB", "YCC", "GREY" }));
        espectro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                espectroActionPerformed(evt);
            }
        });
        jPanel16.add(espectro);

        jPanel15.add(jPanel16);

        jPanel2.add(jPanel15);

        jPanel3.setLayout(new java.awt.GridLayout(0, 1));

        jLabel4.setText("Rotacion");
        jPanel3.add(jLabel4);

        jPanel12.setLayout(new java.awt.GridLayout(1, 0));

        jSlider2.setMaximum(360);
        jSlider2.setToolTipText("");
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });
        jSlider2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSlider2FocusLost(evt);
            }
        });
        jSlider2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSlider2PropertyChange(evt);
            }
        });
        jPanel12.add(jSlider2);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rotacion90.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rotacion180.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rotacion270.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton7);

        jPanel3.add(jPanel12);

        jPanel2.add(jPanel3);

        jPanel13.setLayout(new java.awt.GridLayout(0, 1));

        jLabel5.setText("Escala");
        jPanel13.add(jLabel5);

        jPanel14.setLayout(new java.awt.GridLayout(1, 0));

        reducir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/disminuir.png"))); // NOI18N
        reducir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reducirActionPerformed(evt);
            }
        });
        jPanel14.add(reducir);

        aumentar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/aumentar.png"))); // NOI18N
        aumentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aumentarActionPerformed(evt);
            }
        });
        jPanel14.add(aumentar);

        jPanel13.add(jPanel14);

        jPanel2.add(jPanel13);

        jPanel1.add(jPanel2);

        pie.add(jPanel1, java.awt.BorderLayout.PAGE_START);
        pie.add(jSeparator2, java.awt.BorderLayout.CENTER);

        getContentPane().add(pie, java.awt.BorderLayout.PAGE_END);

        head.setLayout(new java.awt.GridLayout(1, 0));

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        nav1.setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NuevoBoceto.GIF"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        nav1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/abrir.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileAbrirActionPerformed(evt);
            }
        });
        nav1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Guardar.gif"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileGuardarActionPerformed(evt);
            }
        });
        nav1.add(jButton3);

        jPanel8.add(nav1);

        nav2.setLayout(new java.awt.GridLayout(1, 0));

        lapiz.setName("Lapiz");
        menu.add(lapiz);
        lapiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Lapiz.gif"))); // NOI18N
        lapiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(lapiz);

        linea.setName("Linea");
        menu.add(linea);
        linea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Linea.gif"))); // NOI18N
        linea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(linea);

        rectangulo.setName("Rectangulo");
        menu.add(rectangulo);
        rectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Rectangulo.gif"))); // NOI18N
        rectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(rectangulo);

        elipse.setName("Elipse");
        menu.add(elipse);
        elipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Ovalo.gif"))); // NOI18N
        elipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(elipse);

        String.setName("string");
        menu.add(String);
        String.setText("S");
        String.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                herramienta(evt);
            }
        });
        nav2.add(String);

        jPanel8.add(nav2);

        nav3.setLayout(new java.awt.GridLayout(0, 4));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Relleno");
        nav3.add(jLabel7);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Borde");
        nav3.add(jLabel8);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Degradado");
        nav3.add(jLabel11);

        degh.setText("Horizontal");
        degh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deghActionPerformed(evt);
            }
        });
        nav3.add(degh);

        Relleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RellenoActionPerformed(evt);
            }
        });
        nav3.add(Relleno);

        Borde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BordeActionPerformed(evt);
            }
        });
        nav3.add(Borde);

        Degradado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DegradadoActionPerformed(evt);
            }
        });
        nav3.add(Degradado);

        degv.setText("Vertical");
        degv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degvActionPerformed(evt);
            }
        });
        nav3.add(degv);

        jPanel8.add(nav3);

        nav4.setLayout(new java.awt.GridLayout(1, 0));

        numeroalisar.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        numeroalisar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numeroalisarStateChanged(evt);
            }
        });
        nav4.add(numeroalisar);

        relleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rellenar.png"))); // NOI18N
        relleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rellenoActionPerformed(evt);
            }
        });
        nav4.add(relleno);

        Alisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/alisar.png"))); // NOI18N
        Alisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlisarActionPerformed(evt);
            }
        });
        nav4.add(Alisar);

        numtrans.setMaximum(255);
        numtrans.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numtransStateChanged(evt);
            }
        });
        nav4.add(numtrans);

        jPanel8.add(nav4);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        botonRecord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/record24x24.png"))); // NOI18N
        botonRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRecordActionPerformed(evt);
            }
        });
        jPanel18.add(botonRecord, new java.awt.GridBagConstraints());

        botonplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/play24x24.png"))); // NOI18N
        botonplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonplayActionPerformed(evt);
            }
        });
        jPanel18.add(botonplay, new java.awt.GridBagConstraints());

        botonstop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop24x24.png"))); // NOI18N
        botonstop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonstopActionPerformed(evt);
            }
        });
        jPanel18.add(botonstop, new java.awt.GridBagConstraints());

        listaReproduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaReproduccionActionPerformed(evt);
            }
        });
        jPanel18.add(listaReproduccion, new java.awt.GridBagConstraints());

        jPanel8.add(jPanel18);

        head.add(jPanel8);

        getContentPane().add(head, java.awt.BorderLayout.PAGE_START);

        jPanel17.setMaximumSize(new java.awt.Dimension(542, 763));
        jPanel17.setMinimumSize(new java.awt.Dimension(542, 763));
        jPanel17.setLayout(new java.awt.BorderLayout());

        jPanel19.setLayout(new java.awt.BorderLayout());

        jPanel20.setLayout(new java.awt.GridBagLayout());

        Subir.setText("Subir");
        Subir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubirActionPerformed(evt);
            }
        });
        jPanel20.add(Subir, new java.awt.GridBagConstraints());

        Bajar.setText("Bajar");
        Bajar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BajarActionPerformed(evt);
            }
        });
        jPanel20.add(Bajar, new java.awt.GridBagConstraints());

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        jPanel20.add(Eliminar, new java.awt.GridBagConstraints());

        jPanel19.add(jPanel20, java.awt.BorderLayout.PAGE_START);

        jPanel17.add(jPanel19, java.awt.BorderLayout.PAGE_START);

        jPanel22.setLayout(new java.awt.GridBagLayout());

        jPanel23.setLayout(new java.awt.GridLayout(0, 1));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Coordenada X");
        jPanel23.add(jLabel9);

        X.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        X.setPreferredSize(new java.awt.Dimension(80, 30));
        X.setRequestFocusEnabled(false);
        X.setValue(1);
        X.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                XValor(evt);
            }
        });
        jPanel23.add(X);

        jPanel22.add(jPanel23, new java.awt.GridBagConstraints());

        jPanel24.setLayout(new java.awt.BorderLayout());

        mod.setText("Aceptar");
        mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modActionPerformed(evt);
            }
        });
        jPanel24.add(mod, java.awt.BorderLayout.CENTER);

        jPanel22.add(jPanel24, new java.awt.GridBagConstraints());

        jPanel25.setLayout(new java.awt.GridLayout(0, 1));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Coordenada Y");
        jPanel25.add(jLabel10);

        Y.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        Y.setPreferredSize(new java.awt.Dimension(80, 30));
        Y.setValue(1);
        Y.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                YValor(evt);
            }
        });
        jPanel25.add(Y);

        jPanel22.add(jPanel25, new java.awt.GridBagConstraints());

        jPanel17.add(jPanel22, java.awt.BorderLayout.PAGE_END);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(259, 131));

        li.setModel(list_model);
        li.setMaximumSize(new java.awt.Dimension(40, 180));
        li.setMinimumSize(new java.awt.Dimension(40, 180));
        li.setPreferredSize(new java.awt.Dimension(40, 180));
        li.setValueIsAdjusting(true);
        li.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                liValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(li);

        jPanel17.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel17, java.awt.BorderLayout.LINE_END);

        Escritorio.setMaximumSize(new java.awt.Dimension(1841, 732));
        Escritorio.setMinimumSize(new java.awt.Dimension(1841, 732));
        Escritorio.setName(""); // NOI18N

        javax.swing.GroupLayout EscritorioLayout = new javax.swing.GroupLayout(Escritorio);
        Escritorio.setLayout(EscritorioLayout);
        EscritorioLayout.setHorizontalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2124, Short.MAX_VALUE)
        );
        EscritorioLayout.setVerticalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 771, Short.MAX_VALUE)
        );

        getContentPane().add(Escritorio, java.awt.BorderLayout.CENTER);

        File.setText("Archivo");
        File.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FileMouseEntered(evt);
            }
        });
        File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileActionPerformed(evt);
            }
        });

        FileNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NuevoBoceto.GIF"))); // NOI18N
        FileNuevo.setText("Nuevo");
        menu.add(FileNuevo);
        FileNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileNuevoActionPerformed(evt);
            }
        });
        File.add(FileNuevo);

        FileAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/abrir.png"))); // NOI18N
        FileAbrir.setText("Abrir");
        FileAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileAbrirActionPerformed(evt);
            }
        });
        File.add(FileAbrir);

        FileGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Guardar.gif"))); // NOI18N
        FileGuardar.setText("Guardar");
        FileGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileGuardarActionPerformed(evt);
            }
        });
        File.add(FileGuardar);

        jMenuBar1.add(File);

        Edicion.setText("Edición");

        EdicionVerbarra.setSelected(true);
        EdicionVerbarra.setText("Ver barra de estado");
        EdicionVerbarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EdicionVerbarraActionPerformed(evt);
            }
        });
        Edicion.add(EdicionVerbarra);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Ver barra de formas");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        Edicion.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Ver barra de atributos");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        Edicion.add(jCheckBoxMenuItem2);

        jMenuBar1.add(Edicion);

        jMenu1.setText("Ayuda");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        Acercade.setText("Acerca de");
        Acercade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcercadeActionPerformed(evt);
            }
        });
        jMenu1.add(Acercade);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_FileMouseEntered

    private void FileGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileGuardarActionPerformed
        // TODO add your handling code here:
        if(listaReproduccion.getSelectedItem() ==null){
            VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
            if (vi != null) {     
                JFileChooser dlg = new JFileChooser();
            
            int resp = dlg.showSaveDialog(this);     
            if (resp == JFileChooser.APPROVE_OPTION) {     
                try {       
                    BufferedImage img = vi.getLienzoImagen().getImagen(true);      
                    if (img != null) {        
                        File f = dlg.getSelectedFile();       
                        ImageIO.write(img, "png", f);         
                        vi.setTitle(f.getName());       
                        }    
                    }catch (Exception ex) {       
                        System.err.println("Error al guardar la imagen");     
                    }
                }
            }
        
        }else{
            rec= (File)listaReproduccion.getSelectedItem();
        JFileChooser dlg = new JFileChooser();
       dlg.setSelectedFile(rec);
        int resp = dlg.showSaveDialog(this);
        
        if (resp == JFileChooser.APPROVE_OPTION) {

            File f = new File( dlg.getSelectedFile().getAbsolutePath() ){
                @Override
                public String toString(){
                    return this.getName();
                }
            };
            rec.renameTo(f);

            }
        }
    }//GEN-LAST:event_FileGuardarActionPerformed

    private void FileAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileAbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {     
            try{       
                File f = dlg.getSelectedFile();
                
                boolean encontrado = false;
                    int j=0;
                    for(int i=f.toString().length()-1;encontrado;i--){
                        if(f.toString().indexOf(i) == '/'){
                            j=i++;
                            encontrado=true;
                        }
                    }
                    String substring = f.toString().substring(j, f.toString().length());
                    f = new File( substring  ){   
                        @Override   
                        public String toString(){     
                            return this.getName();   
                        } 
                    }; 
                
               
                if(f.toString().contains(".png")||f.toString().contains("jpg")||f.toString().contains("jpeg")){
                    
                    BufferedImage img = ImageIO.read(f);  

                VentanaInterna vi = new VentanaInterna(this,img.getHeight(),img.getWidth()); 
                vi.getLienzoImagen().setImagen(img);      
                vi.setTitle(substring);
                
                this.Escritorio.add(vi);        
                vi.setTitle(f.getName());        
                vi.setVisible(true);     
                actualizarframe();
                vi.actualizardesplazable();
                vi.repaint();
                }
                if(f.toString().contains(".wav") || f.toString().contains(".au")){
                    
                    listaReproduccion.addItem(f); 

                }
                
            }catch(Exception ex){       
                System.err.println("Error al leer el archivo");     }   }
        
    }//GEN-LAST:event_FileAbrirActionPerformed

    private void FileNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileNuevoActionPerformed
        // TODO add your handling code here:
         estado.setText("Paint");
        forma = null;
        color = new Color(0,0,0);
        menu.clearSelection();
    }//GEN-LAST:event_FileNuevoActionPerformed

    private void EdicionVerbarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EdicionVerbarraActionPerformed
        // TODO add your handling code here:
        barraestado = !barraestado;
        estado.setVisible(barraestado);
        
    }//GEN-LAST:event_EdicionVerbarraActionPerformed
    public void actualizarimgSource(){
        imgSource=null;
    }
 
    
    public void actualizarframe(){
        
        VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   

        if (vi != null) {
            jPanel17.setVisible(true);
           
            form = vi.getLienzoImagen().getForma();
            if(form == Formas.PUNTO){
            lapiz.setSelected(true);
             }
            if(form == Formas.LINEA){
            linea.setSelected(true);
             }
            if(form == Formas.RECTANGULO){
            rectangulo.setSelected(true);
             }
            if(form == Formas.ELIPSE){
            elipse.setSelected(true);
             }
            if(form == null){
                vi.getLienzoImagen().setFormas(forma);
            }
            Color col = vi.getLienzoImagen().getBorde();
            Borde.setBackground(col);
            col = vi.getLienzoImagen().getRelleno();
            Relleno.setBackground(col);
            relleno.setSelected(vi.getLienzoImagen().getRellenado());
            numtrans.setValue(vi.getLienzoImagen().getNumtrans());
            Alisar.setSelected(vi.getLienzoImagen().getAlisar());
            numtrans.setValue(vi.getLienzoImagen().getNumtrans());
            numeroalisar.setValue(vi.getLienzoImagen().getGrosor());
            jSlider1.setValue((int)(vi.getLienzoImagen().getBrillo()));
            Filtro.setSelectedItem(vi.getLienzoImagen().getFiltro());
            espectro.setSelectedItem(vi.getLienzoImagen().getEspectro());
            degh.setSelected(vi.getLienzoImagen().getdeghorizontal());
            degv.setSelected(vi.getLienzoImagen().getdegvertical());
            actualizarlista();

        }else{
             jPanel17.setVisible(false);
        }
        
     

        
    }
    private void actualizarlista(){
        
        VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
        if (vi != null) {
            list_model = new MiLista();
            
            lista = vi.getLienzoImagen().GetLista();
                lista.forEach((s) -> {
                    
                    list_model.addFigura(s);
                });
            if(list_model.getSize()==0){
                formas =false;
            }else{
                formas = true;
            }
            li.setModel(list_model);
            
        }
    }
    
    
    
    
    private void Actualizarfigura(MiFigura figura){
         VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
        if (vi != null) {
            if(figura !=null){
                Color col = figura.getBorde();
            Borde.setBackground(col);
            vi.getLienzoImagen().setBorde(col);
            numtrans.setValue(figura.getNumtrans());
            vi.getLienzoImagen().setNumtrans(figura.getNumtrans());
            
            Alisar.setSelected(figura.getAlisar());
            vi.getLienzoImagen().setAlisar(figura.getAlisar());
            numeroalisar.setValue(figura.getGrosor());
            vi.getLienzoImagen().setGrosor(figura.getGrosor());
            
            if(figura instanceof MiRectangularShape){
                col = ((MiRectangularShape)figura).getRelleno();
                Relleno.setBackground(col);
                vi.getLienzoImagen().setRelleno(col);
                col = ((MiRectangularShape)figura).getDegradado();
                Degradado.setBackground(col);
                vi.getLienzoImagen().setDegradado(col);
                if(((MiRectangularShape)figura).getRellenado()){
                    relleno.setSelected(true);
                    vi.getLienzoImagen().setRellenado(true);
                    }else{
                    relleno.setSelected(false);
                    vi.getLienzoImagen().setRellenado(false);
                    }
                if(((MiRectangularShape) figura).getVertical()){
                    degv.setSelected(true);
                }else{
                    degv.setSelected(false);
                }
                if(((MiRectangularShape) figura).getHorizontal()){
                    degh.setSelected(true);
                    vi.getLienzoImagen().setdegvertical(true);
                }else{
                    degh.setSelected(false);
                    vi.getLienzoImagen().setdegvertical(false);
                }
            }
           
            }
        }       
    }
   
    private void herramienta(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_herramienta
        // TODO add your handling code here:
        javax.swing.JToggleButton boton;
        boton = (javax.swing.JToggleButton) evt.getSource();
        switch (boton.getName()){
            case "Lapiz":
                forma=Formas.PUNTO;
                break;
            case "Linea":
                forma = Formas.LINEA;
                break;
            case "Rectangulo":
                forma = Formas.RECTANGULO;
                break;
            case "Elipse":
                forma = Formas.ELIPSE;
                break;
            case "string":
                 new SelString(this,false).setVisible(true);
                forma = Formas.STRING;
                break;
            
        }      
        estado.setText(forma.toString());
        VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzoImagen().setFormas(forma);
            if(li.getSelectedValue()!= null){
                actualizarlista();
            }
            
        }
    }//GEN-LAST:event_herramienta

    private void FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_FileActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        // TODO add your handling code here:
        barraformas = !barraformas;
        nav2.setVisible(barraformas);
        
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed
    
    public void nuevoLienzo(int altura,int anchura){
        if(anchura != 0 && altura != 0){
            VentanaInterna vi = new VentanaInterna(this,anchura,altura);
            Escritorio.add(vi);
         vi.setVisible(true);
         

         actualizarframe();
         altura =0;
         anchura=0;
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new SelLienzo(this).setVisible(true);
         
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rellenoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
        vi.getLienzoImagen().setRellenado(!vi.getLienzoImagen().getRellenado());
        if(li.getSelectedValue() != null){
        if(li.getSelectedValue() instanceof MiRectangularShape){
            ((MiRectangularShape)li.getSelectedValue()).setRellenado(!((MiRectangularShape)li.getSelectedValue()).getRellenado());
        }

        vi.getLienzoImagen().repaint();
        }
        }
        
    }//GEN-LAST:event_rellenoActionPerformed

    private void AlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlisarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
        vi.getLienzoImagen().setAlisar(!vi.getLienzoImagen().getAlisar());
        if(li.getSelectedValue() != null){
        li.getSelectedValue().setAlisar(!li.getSelectedValue().getAlisar());
        vi.getLienzoImagen().repaint();
        }
        
        }
    }//GEN-LAST:event_AlisarActionPerformed

    private void numeroalisarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numeroalisarStateChanged
        // TODO add your handling code here:
       VentanaInterna vi;  
        vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if(vi != null){
        vi.getLienzoImagen().setGrosor(Integer.parseInt(numeroalisar.getValue().toString()));
        if(li.getSelectedValue() != null){
        li.getSelectedValue().setGrosor(Integer.parseInt(numeroalisar.getValue().toString()));
        vi.getLienzoImagen().repaint();
        }
        }
    }//GEN-LAST:event_numeroalisarStateChanged

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        // TODO add your handling code here:
        barraatributos = !barraatributos;
        nav3.setVisible(barraatributos);
        nav4.setVisible(barraatributos);
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void FiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroActionPerformed
        // TODO add your handling code here:
        
        VentanaInterna vi = (VentanaInterna) this.Escritorio.getSelectedFrame();
        if (vi != null)
        {   if(Filtro.getSelectedItem().toString() != "Seleccione"){
            imgSource = vi.getLienzoImagen().getImagen(false);
            if (this.imgSource != null)
                try
                {
                    Kernel k = null;
                    vi.getLienzoImagen().setFiltro(Filtro.getSelectedItem().toString());
                    
                    switch (Filtro.getSelectedItem().toString())
                    {
                        case "media": 
                            k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                            break;
                        case "binomial":
                            k = KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
                            break;
                        case "enfoque":
                            k = KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
                            break;
                        case "relieve":
                            k = KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
                            break;
                        case "laplaciano":
                            k = KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
                            break;
                        
                    }
                    if (k != null)
                    {
                        ConvolveOp cop = new ConvolveOp(k,ConvolveOp.EDGE_NO_OP, null);
                        BufferedImage imgSource = cop.filter(this.imgSource, null);
                        vi.getLienzoImagen().setImagen(imgSource);
                        vi.getLienzoImagen().repaint();
                    }

                } catch (Exception e)
                {
                    System.err.println("Error");
                }
            }
        }


       
        
    }//GEN-LAST:event_FiltroActionPerformed

    private void jSlider1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider1FocusGained
        // TODO add your handling code here:
          VentanaInterna vi =(VentanaInterna)(Escritorio.getSelectedFrame());
          if(vi != null){
              imgSource = vi.getLienzoImagen().getImagen(false);
          }
    }//GEN-LAST:event_jSlider1FocusGained

    private void jSlider1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider1FocusLost
        // TODO add your handling code here:
        imgSource =null;
        
    }//GEN-LAST:event_jSlider1FocusLost

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(Escritorio.getSelectedFrame());
        float value = this.jSlider1.getValue();
        vi.getLienzoImagen().setBrillo(value);
        if (vi != null && imgSource != null)
            try
            {
                RescaleOp rop;
                if (this.imgSource.getColorModel().hasAlpha())
                {
                    float[] scales = new float[]{1.0f, 1.0f, 1.0f, 1.0f};
                    float[] offsets = new float[]{value, value, value, 0.0f};
                    rop = new RescaleOp(scales, offsets, null);
                } else{
                    rop = new RescaleOp(1.0f, value, null);
                }
                BufferedImage imgdest = rop.filter(this.imgSource, null);
                vi.getLienzoImagen().setImagen(imgdest);
                vi.getLienzoImagen().repaint();
                
            } catch (Exception e)
            {
                System.err.println("Error");
            }
    }//GEN-LAST:event_jSlider1StateChanged

    private void contrasteoscuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrasteoscuroActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (Escritorio.getSelectedFrame());   
        if (vi != null) {     
            BufferedImage imgSource = vi.getLienzoImagen().getImagen(false);
             if(imgSource!=null){             
            try{              
                int type = LookupTableProducer.TYPE_GAMMA_CORRECTION;
            
                 LookupTable l = LookupTableProducer.createLookupTable(type);    
                 l = LookupTableProducer.gammaCorrection(LookupTableProducer.DEFAULT_A_GAMMA, LookupTableProducer.TYPE_GAMMA_CORRECTION);
                 LookupOp lop = new LookupOp(l, null);                 
                 lop.filter( imgSource , imgSource);         
                 vi.repaint();       
            } catch(Exception e){           
                System.err.println(e.getLocalizedMessage());       
            }           
            }   
        }
    }//GEN-LAST:event_contrasteoscuroActionPerformed

    private void contrastenormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrastenormalActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (Escritorio.getSelectedFrame());   
        if (vi != null) {     
            BufferedImage imgSource = vi.getLienzoImagen().getImagen(false);
             if(imgSource!=null){             
                try{              
                int type = LookupTableProducer.TYPE_SFUNCION;
            
                LookupTable l = LookupTableProducer.createLookupTable(type);
                l = LookupTableProducer.gammaCorrection(LookupTableProducer.TYPE_GAMMA_CORRECTION, LookupTableProducer.DEFAULT_GAMMA);
                LookupOp lop = new LookupOp(l, null);                 
                lop.filter( imgSource , imgSource);         
                vi.repaint();       
                } catch(Exception e){           
                    System.err.println(e.getLocalizedMessage());       
            }           
            }      
        }
    }//GEN-LAST:event_contrastenormalActionPerformed

    private void aclararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aclararActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (Escritorio.getSelectedFrame());   
        if (vi != null) {     
            BufferedImage imgSource = vi.getLienzoImagen().getImagen(false);
             if(imgSource!=null){             
                try{              
                    int type = LookupTableProducer.TYPE_LOGARITHM;
                    LookupTable l = LookupTableProducer.logarithmFuction();
                    LookupOp lop = new LookupOp(l, null);                 
                    lop.filter( imgSource , imgSource);         
                    vi.repaint();       
                } catch(Exception e){           
                System.err.println(e.getLocalizedMessage());       
                }           
            }   
        }
    }//GEN-LAST:event_aclararActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        imgSource = vi.getLienzoImagen().getImagen(false);
        
        if (vi != null){
            try
            {
                LookupTable lt = seno(180);
                LookupOp lop = new LookupOp(lt, null);
                lop.filter(imgSource, imgSource);
                vi.repaint();
            } catch (Exception e)
            {
                System.err.println("Error");
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
        rotar(90);
        
        
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
            rotar(180);
            
        
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
            rotar(270);
            
        
        }
    }//GEN-LAST:event_jButton7ActionPerformed
    public void setString(String string){
        
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
            vi.getLienzoImagen().setString(string);
        }
    }

    private void jSlider2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSlider2PropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jSlider2PropertyChange

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi != null){
           double valor = jSlider2.getValue();
            
            rotar(valor);
            
        }
    }//GEN-LAST:event_jSlider2StateChanged

    private void reducirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reducirActionPerformed
        // TODO add your handling code here:
        escalar(0.75);
        actualizarVentana();
    }//GEN-LAST:event_reducirActionPerformed

    private void aumentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aumentarActionPerformed
        // TODO add your handling code here:
        escalar(1.25);
        actualizarVentana();
    }//GEN-LAST:event_aumentarActionPerformed
    public void actualizarVentana(){
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if(vi !=null){
            vi.actualizardesplazable();
        }
    }
    private void EspectroColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EspectroColorActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        imgSource = vi.getLienzoImagen().getImagen(true);
        for(int i=0;i<imgSource.getColorModel().getNumColorComponents();i++){
        //Creamos el modelo de color de la nueva imagen basado en un espcio de color GRAY );
            ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_GRAY); 
            ComponentColorModel cm = new ComponentColorModel(cs, false, false,Transparency.OPAQUE,DataBuffer.TYPE_BYTE);        
            int bandList[] = {i};
            WritableRaster bandRaster = (WritableRaster)imgSource.getRaster().createWritableChild(0,0,imgSource.getWidth(), imgSource.getHeight(), 0, 0, bandList);
            BufferedImage imgBanda = new BufferedImage(cm, bandRaster, false, null);
            VentanaInterna vi2=new VentanaInterna(this,0,0);
            vi2.getLienzoImagen().setImagen(imgBanda);
            Escritorio.add(vi2);
            vi2.setTitle(vi2.getTitle()+ i);
            vi2.setVisible(true);
        }

        
    }//GEN-LAST:event_EspectroColorActionPerformed
    public int figuraactual(){
        return li.getSelectedIndex();  
    }
    public void Seleccionarfigura(int i){
        li.setSelectedIndex(i);
    }
    private void espectroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_espectroActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        if (vi != null)
            
        {
            if(espectro.getSelectedItem().toString()!="Seleccione"){
            imgSource = vi.getLienzoImagen().getImagen(true);
            
            if (this.imgSource != null)
                try
                {
                    BufferedImage imgOut =null;
                    ColorSpace cs=null;
                    ColorConvertOp cop=null;
                    vi.getLienzoImagen().setEspectro(espectro.getSelectedItem().toString());
                    switch (espectro.getSelectedItem().toString())
                    {
                        case "RGB":
                            if(imgSource.getColorModel().getColorSpace().isCS_sRGB()){
                                Escritorio.getSelectedFrame().setTitle("RGB");
                                break;
                            }else{
                                cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);   
                                cop = new ColorConvertOp(cs, null);   
                                imgOut = cop.filter(imgSource, null);
                                Escritorio.getSelectedFrame().setTitle("RGB");
                            }
                            vi.getLienzoImagen().setImagen(imgOut);
                            break;
                        case "YCC":
                            cs = ColorSpace.getInstance(ColorSpace.CS_PYCC);   
                            cop = new ColorConvertOp(cs, null);   
                            imgOut = cop.filter(imgSource, null);
                            Escritorio.getSelectedFrame().setTitle("YCC");
                            vi.getLienzoImagen().setImagen(imgOut);
                            break;
                        case "GREY":
                            cs = ColorSpace.getInstance(ColorSpace.CS_GRAY);   
                            cop = new ColorConvertOp(cs, null);   
                            imgOut = cop.filter(imgSource, null);
                            Escritorio.getSelectedFrame().setTitle("GREY");
                            vi.getLienzoImagen().setImagen(imgOut);
                            break;
                    }
                    
                    vi.repaint();

                } catch (Exception e)
                {
                    System.err.println("Error");
                }
            }
        }
    }//GEN-LAST:event_espectroActionPerformed

    public void selcolor(String tipo,Color color){
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
         if(vi!=null){
        if (tipo.equals("Relleno")){
            Relleno.setBackground(color);
            vi.getLienzoImagen().setRelleno(color);
            if(li.getSelectedValue() !=null){
                if(li.getSelectedValue() instanceof MiRectangularShape){
                    ((MiRectangularShape)li.getSelectedValue()).setRelleno(color);
                }

                vi.getLienzoImagen().repaint();
            }
        }
        if (tipo.equals("Borde")){
            Borde.setBackground(color);
            vi.getLienzoImagen().setBorde(color);
            if(li.getSelectedValue() !=null){
             li.getSelectedValue().setBorde(color);
             vi.getLienzoImagen().repaint();
            }
        }
        if (tipo.equals("Degradado")){
            Degradado.setBackground(color);
            vi.getLienzoImagen().setBorde(color);
            if(li.getSelectedValue() !=null){
                if(li.getSelectedValue()  instanceof MiRectangularShape){
                ((MiRectangularShape)li.getSelectedValue()).setDegradado(color);
             vi.getLienzoImagen().repaint();
            }
                
             
            }
            }
         }
    }
    public void setnamerec(String name){
        File nuevo = new File(name);
        rec.renameTo(nuevo);
        listaReproduccion.addItem(nuevo);
    }
    
    private void RellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RellenoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
         if(vi!=null){
        new SelCol(this,"Relleno").setVisible(true);
         }
    }//GEN-LAST:event_RellenoActionPerformed

    private void BordeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BordeActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
         if(vi!=null){
        new SelCol(this,"Borde").setVisible(true);
         }
    }//GEN-LAST:event_BordeActionPerformed

    private void botonplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonplayActionPerformed
        // TODO add your handling code here:
        player = null; 
        File f = (File)listaReproduccion.getSelectedItem(); 
        if(f!=null){   
            player = new SMClipPlayer(f);
            ((SMClipPlayer)player).addLineListener( new ManejadorAudio(botonplay,botonstop));
            if (player != null) {     
                player.play();
                botonstop.setEnabled(true);
                botonRecord.setEnabled(false);
                
            }
        }
    }//GEN-LAST:event_botonplayActionPerformed

    private void listaReproduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaReproduccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaReproduccionActionPerformed

    private void botonstopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonstopActionPerformed
        // TODO add your handling code here:
        if (player != null) {     
                player.stop();
                botonplay.setEnabled(true);
                botonstop.setEnabled(false);
                botonRecord.setEnabled(true);
            }
        if (recorder != null){
            recorder.stop();
            recorder = null;
            botonplay.setEnabled(true);
            botonstop.setEnabled(false);
            botonRecord.setEnabled(true);
            new SelString(this,true).setVisible(true);
            
            
        }
    }//GEN-LAST:event_botonstopActionPerformed

    private void botonRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRecordActionPerformed
        // TODO add your handling code here:
        botonplay.setEnabled(false);
        botonstop.setEnabled(true);
        botonRecord.setEnabled(false);
        recorder = new SMSoundRecorder(rec);
        recorder.record();
        
    }//GEN-LAST:event_botonRecordActionPerformed

    private void XValor(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_XValor
        // TODO add your handling code here:
        
        cordenadaX = Integer.parseInt(X.getValue().toString());
        

    }//GEN-LAST:event_XValor

    private void YValor(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_YValor
        // TODO add your handling code here:
        cordenadaY = Integer.parseInt(Y.getValue().toString());
        

    }//GEN-LAST:event_YValor

    private void SubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubirActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
        if (vi != null) {
          int numero = li.getSelectedIndex();
         List<MiFigura> lista = vi.getLienzoImagen().GetLista();
         if(numero < lista.size()-1){
             MiFigura uno = lista.get(numero+1);
             lista.set(numero+1, li.getSelectedValue());
             lista.set(numero, uno);
         }
         vi.getLienzoImagen().setLista(lista);
         actualizarlista();
        }
    }//GEN-LAST:event_SubirActionPerformed

    private void BajarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BajarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
        if (vi != null) {
          int numero = li.getSelectedIndex();
         List<MiFigura> lista = vi.getLienzoImagen().GetLista();
         if(numero > 0){
             MiFigura uno = lista.get(numero-1);
             lista.set(numero-1, li.getSelectedValue());
             lista.set(numero, uno);
         }
         vi.getLienzoImagen().setLista(lista);
         actualizarlista();
        }
    }//GEN-LAST:event_BajarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
        if (vi != null) {
          int numero = li.getSelectedIndex();
         lista = vi.getLienzoImagen().GetLista();
             lista.remove(numero);
         vi.getLienzoImagen().setLista(lista);
         actualizarlista();
        }
    }//GEN-LAST:event_EliminarActionPerformed
    public void actualizarpuntero(int x,int y){
        cordenadaX = x;
        cordenadaY = y;
        X.setValue(x);
        Y.setValue(y);
    }
    private void liValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_liValueChanged
        // TODO add your handling code here:
                Actualizarfigura(li.getSelectedValue());
          VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
        if (vi != null) {
            if(li.getSelectedValue() != null){
               actualizarpuntero((int)li.getSelectedValue().getLocation().getX(),(int)li.getSelectedValue().getLocation().getY());
                vi.getLienzoImagen().setEditar(li.getSelectedIndex());
            }
        }
    }//GEN-LAST:event_liValueChanged

    private void modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi=(VentanaInterna)Escritorio.getSelectedFrame();   
        if (vi != null) {
            if(li.getSelectedValue() != null){
          int numero = li.getSelectedIndex();
         lista = vi.getLienzoImagen().GetLista();
         Point2D punto = new Point2D.Double(cordenadaX,cordenadaY);
         lista.get(numero).setLocation(punto);
         vi.getLienzoImagen().setLista(lista);
         vi.getLienzoImagen().repaint();
         this.actualizarlista();
         li.setSelectedIndex(numero);
            }
        }
    }//GEN-LAST:event_modActionPerformed

    private void AcercadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcercadeActionPerformed
        // TODO add your handling code here:
        new Acercade(this,true).setVisible(true);
    }//GEN-LAST:event_AcercadeActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        imgSource = vi.getLienzoImagen().getImagen(false);
        
        if (vi != null){
            try
            {
                LookupTable lt = mifuncion(180);
                LookupOp lop = new LookupOp(lt, null);
                lop.filter(imgSource, imgSource);
                vi.repaint();
            } catch (Exception e)
            {
                System.err.println("Error");
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jSlider2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jSlider2FocusLost

    private void numtransStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numtransStateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        imgSource = vi.getLienzoImagen().getImagen(false);
        
        if (vi != null){
            if(li.getSelectedValue() != null){
                li.getSelectedValue().setNumtrans(numtrans.getValue());
            }else{
            vi.getLienzoImagen().setNumtrans(numtrans.getValue());
            }
            vi.getLienzoImagen().repaint();
        }
    }//GEN-LAST:event_numtransStateChanged

    private void DegradadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DegradadoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
         if(vi!=null){
        new SelCol(this,"Degradado").setVisible(true);
         }
    }//GEN-LAST:event_DegradadoActionPerformed

    private void deghActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deghActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
         if(vi!=null){
             if(li.getSelectedValue()!= null){
                 if(li.getSelectedValue() instanceof MiRectangularShape){
                     ((MiRectangularShape)li.getSelectedValue()).setHorizontal(!((MiRectangularShape)li.getSelectedValue()).getHorizontal());
                 }
                 
             }else{
                 vi.getLienzoImagen().setdeghorizontal(!vi.getLienzoImagen().getdeghorizontal());
             }
         }
    }//GEN-LAST:event_deghActionPerformed

    private void degvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degvActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
         if(vi!=null){
             if(li.getSelectedValue()!= null){
                 if(li.getSelectedValue() instanceof MiRectangularShape){
                     ((MiRectangularShape)li.getSelectedValue()).setVertical(!((MiRectangularShape)li.getSelectedValue()).getVertical());
                 }
                 
             }else{
                 vi.getLienzoImagen().setdegvertical(!vi.getLienzoImagen().getdegvertical());
             }
         }
    }//GEN-LAST:event_degvActionPerformed
    
    private void escalar(double indice){
        VentanaInterna vi = (VentanaInterna) Escritorio.getSelectedFrame();
        imgSource = vi.getLienzoImagen().getImagen(true);
        AffineTransform at = AffineTransform.getScaleInstance(indice, indice);
        AffineTransformOp atop;
        atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR); 
        BufferedImage imgdest = atop.filter(imgSource, null);
        vi.getLienzoImagen().setImagen(imgdest);
        vi.repaint();
        actualizarVentana();
    }
    private void rotar(double angulo){
        VentanaInterna vi = (VentanaInterna) (Escritorio.getSelectedFrame()); 
        if (vi != null) {
            if(imgSource == null){
                imgSource = vi.getLienzoImagen().getImagen(true);
            }
            if(formas){
                imgSource = vi.getLienzoImagen().getImagen(true);
                actualizarlista();
                formas=false;
            }
            try{

                BufferedImage Dest = new BufferedImage(imgSource.getHeight(), imgSource.getWidth(), BufferedImage.TYPE_INT_ARGB);
                double r = Math.toRadians(jSlider2.getValue());
                Point p = vi.getLienzoImagen().getPoint();
                AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);
                AffineTransformOp atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                Dest = atop.filter(imgSource, null);
                vi.getLienzoImagen().setImagen(Dest);
                vi.repaint();
                
                
            }catch(IllegalArgumentException e){
                System.err.println();
            }  
        }
        
        
    }
    private LookupTable seno(double w){
        double K = 255.0; // Cte de normalización
        // Código implementado f(x)=|sin(wx)|
        byte[] lt = new byte[256];
        for (int i = 0; i < 256; ++i)
            lt[i] = (byte)Math.abs(K * Math.sin( w * i ));
        ByteLookupTable slt = new ByteLookupTable(0, lt);
        return slt;
    }
    private LookupTable mifuncion(double w){
        double K = 255.0; // Cte de normalización
       
        byte[] lt = new byte[256];
        for (int i = 0; i < 256; ++i)
            //La funcion es raiz del log(wx)
            lt[i] = (byte)Math.abs(K * Math.sqrt(Math.log(w * i )));
        ByteLookupTable slt = new ByteLookupTable(0, lt);
        return slt;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Acercade;
    private javax.swing.JToggleButton Alisar;
    private javax.swing.JButton Bajar;
    private javax.swing.JButton Borde;
    private javax.swing.JButton Degradado;
    private javax.swing.JMenu Edicion;
    private javax.swing.JCheckBoxMenuItem EdicionVerbarra;
    private javax.swing.JButton Eliminar;
    private javax.swing.JDesktopPane Escritorio;
    private javax.swing.JButton EspectroColor;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem FileAbrir;
    private javax.swing.JMenuItem FileGuardar;
    private javax.swing.JMenuItem FileNuevo;
    private javax.swing.JComboBox<String> Filtro;
    private javax.swing.JButton Relleno;
    private javax.swing.JToggleButton String;
    private javax.swing.JButton Subir;
    private javax.swing.JSpinner X;
    private javax.swing.JSpinner Y;
    private javax.swing.JButton aclarar;
    private javax.swing.JButton aumentar;
    private javax.swing.JButton botonRecord;
    private javax.swing.JButton botonplay;
    private javax.swing.JButton botonstop;
    private javax.swing.JButton contrastenormal;
    private javax.swing.JButton contrasteoscuro;
    private javax.swing.JButton degh;
    private javax.swing.JButton degv;
    private javax.swing.JToggleButton elipse;
    private javax.swing.JComboBox<String> espectro;
    private javax.swing.JLabel estado;
    private javax.swing.JPanel head;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JToggleButton lapiz;
    private javax.swing.JList<MiFigura> li;
    private javax.swing.JToggleButton linea;
    private javax.swing.JMenu list;
    private javax.swing.JComboBox<File> listaReproduccion;
    private javax.swing.ButtonGroup menu;
    private javax.swing.JButton mod;
    private javax.swing.JPanel nav1;
    private javax.swing.JPanel nav2;
    private javax.swing.JPanel nav3;
    private javax.swing.JPanel nav4;
    private javax.swing.JSpinner numeroalisar;
    private javax.swing.JSlider numtrans;
    private javax.swing.JPanel pie;
    private javax.swing.JToggleButton rectangulo;
    private javax.swing.JButton reducir;
    private javax.swing.JToggleButton relleno;
    // End of variables declaration//GEN-END:variables
}
