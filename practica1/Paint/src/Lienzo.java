
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Color;
import java.awt.event.MouseEvent;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author eyehalcon97
 */
public class Lienzo extends javax.swing.JPanel {

    /**
     * Creates new form Lienzo
     */
    private Point pin = new Point(-10,-10);
    private Point pout = new Point(-10,-10);
    private Color color;
    private Formas forma;
    private boolean relleno = false;
    
    public Lienzo() {
        initComponents();
    }
    
    public void paint(Graphics g){
        
        super.paint(g);
        g.setColor(color);
        int x, y;
        int w, h;
        if(null != forma)switch (forma) {
            case PUNTO:
                g.fillOval(pin.x, pin.y, 7, 7);
                break;
            case LINEA:
                g.drawLine(pin.x, pin.y, pout.x, pout.y);
                break;
            case RECTANGULO:
                if(pin.x > pout.x){
                x = pout.x;
                w = pin.x - pout.x;
                }else{
                    x = pin.x;
                    w = pout.x - pin.x;
                }
             
                if(pin.y > pout.y){
                    y = pout.y;
                    h = pin.y - pout.y;
                    }else{
                        y = pin.y;
                    h = pout.y - pin.y;
                }
                if(relleno == false){
                    g.drawRect(x, y, w, h);
                }else{
                    g.fillRect(x, y, w, h);
                }
                
                break;
            case ELIPSE:
                if(pin.x > pout.x){
                x = pout.x;
                w = pin.x - pout.x;
                }else{
                    x = pin.x;
                    w = pout.x - pin.x;
                }
             
                if(pin.y > pout.y){
                    y = pout.y;
                    h = pin.y - pout.y;
                    }else{
                        y = pin.y;
                    h = pout.y - pin.y;
                }
                if(relleno == false){
                    g.drawOval(x, y, w, h);
                }else{
                    g.fillOval(x, y, w, h);
                }
                
                
                break;
            default:
                break;
        }
    }
    public void setColor(Color color){
        this.color = new Color(color.getRGB());
    }
    public void setFormas(Formas forma){
        this.forma=forma;
    }
    public void setRelleno(){
        relleno = !relleno;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
            pin = evt.getPoint();
            repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
            pout = evt.getPoint();
            
            repaint();
        
       
       
               
        
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        pin = evt.getPoint();
        repaint();
    }//GEN-LAST:event_formMousePressed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
